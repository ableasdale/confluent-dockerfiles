version: "3.9"
services:

  # SOURCE CLUSTER

  broker:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker
    container_name: broker
    ports:
      - "9091:9091"
      - "8090:8090"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29091,PLAINTEXT_HOST://localhost:9091'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: "http://0.0.0.0:8090"
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29091,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9091'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      #KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'AQe4zqZuTiKSM1aM4doBxY'

      # Metrics Reporting
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29091
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'true'

  schemaregistry:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    container_name: schemaregistry
    restart: always
    depends_on:
      - broker
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29091"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_MODE_MUTABILITY: "true"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: io.confluent.schema.exporter.SchemaExporterResourceExtension
      SCHEMA_REGISTRY_KAFKASTORE_UPDATE_HANDLERS: io.confluent.schema.exporter.storage.SchemaExporterUpdateHandler
      SCHEMA_REGISTRY_PASSWORD_ENCODER_SECRET: mysecret
      SCHEMA_REGISTRY_GROUP_ID: schemaregistry
  
  controlcenter:
    image: confluentinc/cp-enterprise-control-center:${CP_TAG}
    hostname: controlcenter
    container_name: controlcenter
    restart: always
    depends_on:
      - broker
      - broker2
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29091"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: "true"
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1

      CONTROL_CENTER_KAFKA_SOURCE_BOOTSTRAP_SERVERS: "broker:29091"
      CONTROL_CENTER_KAFKA_SOURCE_CPREST_URL: http://broker:8090
      CONTROL_CENTER_SCHEMA_REGISTRY_SOURCE_URL: "http://schemaregistry:8081"

      CONTROL_CENTER_KAFKA_TARGET_BOOTSTRAP_SERVERS: "broker2:29092"
      CONTROL_CENTER_SCHEMA_REGISTRY_TARGET_URL: "http://schemaregistry2:8082"
      CONTROL_CENTER_KAFKA_TARGET_CPREST_URL: http://broker2:8091

  # TARGET CLUSTER

  broker2:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker2
    container_name: broker2
    restart: always
    depends_on:
      - broker
    ports:
      - "9092:9092"
      - "8091:8091"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: "http://0.0.0.0:8091"
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schemaregistry2:8082"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker2:29094'
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:29092,CONTROLLER://broker2:29094,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      #KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'ZWe3nnZwTrKSM0aM2doAxQ'
      # Metrics Reporting
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29091
      CONFLUENT_METRICS_ENABLE: 'true'

  schemaregistry2:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    container_name: schemaregistry2
    restart: always
    depends_on:
      - broker2
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker2:29092"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry2
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8082"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      # SCHEMA_REGISTRY_KAFKASTORE.TOPIC: "_schemas1"
      SCHEMA_REGISTRY_MODE_MUTABILITY: "true"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_GROUP_ID: schemaregistry2
      SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: io.confluent.schema.exporter.SchemaExporterResourceExtension
      SCHEMA_REGISTRY_KAFKASTORE_UPDATE_HANDLERS: io.confluent.schema.exporter.storage.SchemaExporterUpdateHandler
      SCHEMA_REGISTRY_PASSWORD_ENCODER_SECRET: mysecret
    ports:
      - 8082:8082
