version: "3.9"
services:

  # SOURCE CLUSTER

  broker:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker
    container_name: broker
    ports:
      - "9091:9091"
      - "8090:8090"
    volumes:
      - ./secrets:/etc/kafka/secrets/
      - ./config:/tmp/config/
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29091,PLAINTEXT_HOST://localhost:9091'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: "http://0.0.0.0:8090"
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29091,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9091'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'AQe4zqZuTiKSM1aM4doBxY'
      # Metrics Reporting
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29091
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'true'

  schemaregistry:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    container_name: schemaregistry
    restart: always
    depends_on:
      - broker
    ports:
      - 8081:8081
    volumes:
      - ./secrets:/etc/kafka/secrets/
      - ./config:/tmp/config/
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29091"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_MODE_MUTABILITY: "true"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: io.confluent.schema.exporter.SchemaExporterResourceExtension
      SCHEMA_REGISTRY_KAFKASTORE_UPDATE_HANDLERS: io.confluent.schema.exporter.storage.SchemaExporterUpdateHandler
      SCHEMA_REGISTRY_PASSWORD_ENCODER_SECRET: mysecret
      SCHEMA_REGISTRY_GROUP_ID: schemaregistry
  
  controlcenter:
    image: confluentinc/cp-enterprise-control-center:${CP_TAG}
    hostname: controlcenter
    container_name: controlcenter
    restart: always
    depends_on:
      - broker
      - broker2
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29091"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: "true"
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
      # Source Cluster
      CONTROL_CENTER_KAFKA_SOURCE_BOOTSTRAP_SERVERS: "broker:29091"
      CONTROL_CENTER_KAFKA_SOURCE_CPREST_URL: http://broker:8090
      CONTROL_CENTER_SCHEMA_REGISTRY_SOURCE_URL: "http://schemaregistry:8081"
      CONTROL_CENTER_CONNECT_SOURCE_CLUSTER: http://connect:8083
      CONTROL_CENTER_CONNECT_SOURCE-REPLICATOR_CLUSTER: http://connect-src-replicator:8085

      # Target Cluster
      CONTROL_CENTER_KAFKA_TARGET_BOOTSTRAP_SERVERS: "broker2:29092"
      CONTROL_CENTER_SCHEMA_REGISTRY_TARGET_URL: "http://schemaregistry2:8082"
      CONTROL_CENTER_KAFKA_TARGET_CPREST_URL: http://broker2:8091
      CONTROL_CENTER_CONNECT_TARGET_CLUSTER: http://connect2:8084

  connect:
    container_name: connect
    hostname: connect
    image: confluentinc/cp-enterprise-replicator:${CP_TAG}
    ports:
      - '8083:8083'
    restart: always
    depends_on:
      - broker
      - schemaregistry
    volumes:
      - $PWD/data:/data
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_LISTENERS: http://connect:8083
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "source"
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://broker:8090
      # Connect Custom Topics
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.3
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

      # CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: '[%d] %p %X{connector.context}%m (%c:%L)%n'
      # CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR,io.confluent.connect.replicator.offsets.OffsetManager=DEBUG
      # CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      #CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      #CONNECT_PRODUCER_CLIENT_ID: connect-worker-producer
      #CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension

  connect-src-replicator:
    container_name: connect-src-replicator
    hostname: connect-src-replicator
    image: confluentinc/cp-enterprise-replicator:${CP_TAG}
    ports:
      - '8085:8085'
    restart: always
    depends_on:
      - broker
      - schemaregistry
    environment:
      CLASSPATH: /usr/share/java/kafka-connect-replicator/replicator-rest-extension-${CP_TAG}.jar:/usr/share/java/monitoring-interceptors/*
      CONNECT_LISTENERS: http://connect-src-replicator:8085
      CONNECT_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_PRODUCER_CLIENT_ID: connect-worker-producer
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker:29091
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-src-replicator
      CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
      CONNECT_REST_PORT: 8085
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://broker:8090
      # Connect Custom Topics
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_TOPIC: connect-src-replicator-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_CONFIG_STORAGE_TOPIC: connect-src-replicator-configs
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_TOPIC: connect-src-replicator-offsets

  # TARGET CLUSTER

  broker2:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker2
    container_name: broker2
    restart: always
    depends_on:
      - broker
    ports:
      - "9092:9092"
      - "8091:8091"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: "http://0.0.0.0:8091"
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schemaregistry2:8082"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker2:29094'
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:29092,CONTROLLER://broker2:29094,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'ZWe3nnZwTrKSM0aM2doAxQ'
      # Metrics Reporting
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29091
      CONFLUENT_METRICS_ENABLE: 'true'

  schemaregistry2:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    container_name: schemaregistry2
    restart: always
    depends_on:
      - broker2
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker2:29092"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry2
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8082"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_MODE_MUTABILITY: "true"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_GROUP_ID: schemaregistry2
      SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: io.confluent.schema.exporter.SchemaExporterResourceExtension
      SCHEMA_REGISTRY_KAFKASTORE_UPDATE_HANDLERS: io.confluent.schema.exporter.storage.SchemaExporterUpdateHandler
      SCHEMA_REGISTRY_PASSWORD_ENCODER_SECRET: mysecret
    ports:
      - 8082:8082

  connect2:
    container_name: connect2
    hostname: connect2
    image: confluentinc/cp-enterprise-replicator:${CP_TAG}
    ports:
      - '8084:8084'
    restart: always
    depends_on:
      - broker2
      - schemaregistry2
    volumes:
      - $PWD/data:/data
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker2:29092
      CONNECT_LISTENERS: http://connect2:8084
      CONNECT_REST_PORT: 8084
      CONNECT_GROUP_ID: "target"
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker2:29092 # or should it be broker:29091
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: broker2:29092 # or should it be broker:29091
      CONNECT_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://broker2:8091
      # Connect Custom Topics
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry2:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry2:8082
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
      CONNECT_REST_ADVERTISED_HOST_NAME: connect2
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.3
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity