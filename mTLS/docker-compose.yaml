services:

  zookeeper:
    image: confluentinc/cp-zookeeper:${CP_TAG}
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: ERROR
      ZOOKEEPER_LOG4J_LOGLEVEL: ERROR

  broker:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker
    container_name: broker
    restart: always
    ports:
      - "9091:9091"
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - ./security:/etc/kafka/secrets/
      # - .:/tmp/application/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://:9091,SSL://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9091,SSL://broker:9092
      # TLS Configuration
      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker_sslkey_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker_sslkey_creds
      KAFKA_SSL_CLIENT_AUTH: "required"
      # Metric Reporter (and TLS Configuration)
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/metrics.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/metrics.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEY_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SSL
      # Replication Factors for Standalone Kafka Broker
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONFLUENT_CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      # Cluster Linking Specific Configuration
      KAFKA_PASSWORD_ENCODER_SECRET: broker_sslkey_creds

  schema-registry:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    ports:
      - '8081:8081'
    depends_on:
      - zookeeper
      - broker
    volumes:
      - ./security:/etc/kafka/secrets/
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:9092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "https://schema-registry:8081"
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LOG4J_LOGLEVEL: ERROR
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schema-registry.truststore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schema-registry.keystore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schema-registry.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schema-registry.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: "true"
      # https://github.com/vdesabou/kafka-docker-playground/issues/18
      #SCHEMA_REGISTRY_SSL_CIPHER_SUITES: "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:${CP_TAG}
    hostname: rest-proxy
    container_name: rest-proxy
    restart: always
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - 8082:8082
    volumes:
      - ./security:/etc/kafka/secrets/
    environment:
      KAFKA_REST_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/rest-proxy.truststore.jks
      KAFKA_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/rest-proxy.keystore.jks
      KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_REST_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_REST_SSL_KEY_PASSWORD: confluent
      KAFKA_REST_LOG4J_LOGLEVEL: ERROR
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SSL
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/rest-proxy.truststore.jks
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/rest-proxy.keystore.jks
      KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: confluent
      KAFKA_REST_LISTENERS: "https://rest-proxy:8082"
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"

  control-center:
    image: confluentinc/cp-enterprise-control-center:${CP_TAG}
    hostname: control-center
    container_name: control-center
    restart: always
    volumes:
      - ./security:/etc/kafka/secrets/
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - 9021:9021
      - 9022:9022
    environment:
      CONTROL_CENTER_LOG4J_ROOT_LOGLEVEL: INFO
      CONTROL_CENTER_LOG4J_LOGLEVEL: INFO
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://schema-registry:8081"
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SSL
      # CONTROL_CENTER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/control-center.truststore.jks
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/control-center.keystore.jks
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_SSL_KEY_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REST_LISTENERS: "http://0.0.0.0:9021,https://0.0.0.0:9022"
      CONTROL_CENTER_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/control-center.truststore.jks
      CONTROL_CENTER_REST_SSL_TRUSTSTORE_PASSWORD: confluent
      CONTROL_CENTER_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/control-center.keystore.jks
      CONTROL_CENTER_REST_SSL_KEYSTORE_PASSWORD: confluent
      CONTROL_CENTER_REST_SSL_KEY_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: "5"
      CONTROL_CENTER_OPTS: -Djavax.net.ssl.trustStore=/etc/kafka/secrets/control-center.truststore.jks
                  -Djavax.net.ssl.trustStorePassword=confluent
                  -Djavax.net.ssl.keyStore=/etc/kafka/secrets/control-center.keystore.jks
                  -Djavax.net.ssl.keyStorePassword=confluent
      PORT: 9021

  tools:
    build:
      context: ./tools
    hostname: tools
    container_name: tools
    volumes:
      - .:/tmp/mTLS
      - ./security:/etc/kafka/secrets
    entrypoint: /bin/bash
    tty: true
